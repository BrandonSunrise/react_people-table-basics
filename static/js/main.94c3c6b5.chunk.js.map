{"version":3,"sources":["pages/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonItem/PersonItem.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","components/PageNavLink/PageNavLink.tsx","components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["HomePage","_jsx","className","children","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","memo","_ref","person","slug","name","sex","NavLink","to","concat","classNames","PersonItem","personSlug","mother","father","born","died","isSelected","personMotherName","motherName","personFatherName","fatherName","_jsxs","PeopleTable","people","map","find","mom","dad","PeoplePage","_useParams$personSlug","useParams","_useState","useState","_useState2","_slicedToArray","setPeople","_useState3","_useState4","hasError","setHasError","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","isFetched","setIsFetched","isTableVisible","length","isTableEmpty","fetchPeople","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","responsePeople","wrap","_context","prev","next","sent","t0","finish","stop","useEffect","NotFoundPage","PageNavLink","text","_ref2","isActive","NavBar","role","App","Routes","Route","path","element","Navigate","replace","index","createRoot","document","getElementById","render","Router"],"mappings":"2PAEaA,EAAoB,WAC/B,OACEC,cAAA,OAAKC,UAAU,YAAWC,SACxBF,cAAA,MAAIC,UAAU,QAAOC,SAAC,eAG5B,E,qBCLMC,EAAU,oEAMT,SAASC,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAM,KAMrDI,MAAK,kBAAMC,MAAMP,EAAQ,IACzBM,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAM,IARrC,IAAcP,CASd,C,UCZaQ,EAAS,WAAH,OACjBb,cAAA,OAAKC,UAAU,SAAS,UAAQ,SAAQC,SACtCF,cAAA,OAAKC,UAAU,qBACX,E,iBCMKa,EAA8BC,gBAAK,SAAAC,GAAiB,IAAdC,EAAMD,EAANC,OAE/CC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,KACAC,EACEH,EADFG,IAGF,OACEpB,cAACqB,IAAO,CACNC,GAAE,WAAAC,OAAaL,GACfjB,UAAW,kBACTuB,IAAW,CAAE,kBAA2B,MAARJ,GAAc,EAC9ClB,SAEDiB,GAGP,IChBaM,EAA8B,SAAHT,GAKjC,IAJLC,EAAMD,EAANC,OACAS,EAAUV,EAAVU,WACAC,EAAMX,EAANW,OACAC,EAAMZ,EAANY,OAGEV,EAMED,EANFC,KACAE,EAKEH,EALFG,IACAS,EAIEZ,EAJFY,KACAC,EAGEb,EAHFa,KAKIC,EAAaL,IAAeR,EAC5Bc,EAHFf,EAFFgB,YAKqC,IACjCC,EAJFjB,EADFkB,YAKqC,IAEvC,OACEC,eAAA,MACE,UAAQ,SAERnC,UAAWuB,IAAW,CAAE,yBAA0BO,IAAc7B,SAAA,CAEhEF,cAAA,MAAAE,SACEF,cAACc,EAAU,CAACG,OAAQA,MAGtBjB,cAAA,MAAAE,SAAKkB,IACLpB,cAAA,MAAAE,SAAK2B,IACL7B,cAAA,MAAAE,SAAK4B,IAEL9B,cAAA,MAAAE,SACIyB,EAA4B3B,cAACc,EAAU,CAACG,OAAQU,IAAvCK,IAGbhC,cAAA,MAAAE,SACI0B,EAA4B5B,cAACc,EAAU,CAACG,OAAQW,IAAvCM,MAhBRhB,EAoBX,EC7CamB,EAA+BtB,gBAAK,SAAAC,GAG1C,IAFLsB,EAAMtB,EAANsB,OACAZ,EAAUV,EAAVU,WAEA,OACEU,eAAA,SACE,UAAQ,cACRnC,UAAU,uDAAsDC,SAAA,CAEhEF,cAAA,SAAAE,SACEkC,eAAA,MAAAlC,SAAA,CACEF,cAAA,MAAAE,SAAI,SACJF,cAAA,MAAAE,SAAI,QACJF,cAAA,MAAAE,SAAI,SACJF,cAAA,MAAAE,SAAI,SACJF,cAAA,MAAAE,SAAI,WACJF,cAAA,MAAAE,SAAI,gBAIRF,cAAA,SAAAE,SACGoC,EAAOC,KAAI,SAAAtB,GACV,IAAMU,EAASW,EAAOE,MAAK,SAAAC,GAAG,OAAIA,EAAItB,OAASF,EAAOgB,UAAU,IAC1DL,EAASU,EAAOE,MAAK,SAAAE,GAAG,OAAIA,EAAIvB,OAASF,EAAOkB,UAAU,IAEhE,OACEnC,cAACyB,EAAU,CACTR,OAAQA,EAERS,WAAYA,EACZC,OAAQA,EACRC,OAAQA,GAHHX,EAAOC,KAMlB,QAIR,ICnCayB,EAAuB5B,gBAAK,WACvC,IAAuC6B,EAAXC,cAApBnB,kBAAU,IAAAkB,EAAG,GAAEA,EACvBE,EAA4BC,mBAAmB,IAAGC,EAAAC,YAAAH,EAAA,GAA3CR,EAAMU,EAAA,GAAEE,EAASF,EAAA,GACxBG,EAAgCJ,oBAAS,GAAMK,EAAAH,YAAAE,EAAA,GAAxCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,EAAkCR,oBAAS,GAAMS,EAAAP,YAAAM,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,EAAkCZ,oBAAS,GAAMa,EAAAX,YAAAU,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAExBG,EAAiBF,GAAavB,EAAO0B,OACrCC,EAAeJ,IAAcvB,EAAO0B,OAEpCE,EAAcC,sBAAWC,YAAAC,cAAAC,MAAC,SAAAC,IAAA,IAAAC,EAAA,OAAAH,cAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACX,OAAnBlB,GAAa,GAAMgB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGYxE,IAAY,KAAD,EAAlCoE,EAAcE,EAAAG,KAEpB3B,EAAUsB,GACVV,GAAa,GAAMY,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SAEnBpB,GAAY,GAAM,QAEE,OAFFoB,EAAAC,KAAA,GAElBjB,GAAa,GAAOgB,EAAAK,OAAA,6BAAAL,EAAAM,OAAA,GAAAT,EAAA,wBAErB,IAMH,OAJAU,qBAAU,WACRf,GACF,GAAG,IAGD9B,eAAA,OAAKnC,UAAU,YAAWC,SAAA,CACxBF,cAAA,MAAIC,UAAU,QAAOC,SAAC,gBAEtBF,cAAA,OAAKC,UAAU,QAAOC,SACpBkC,eAAA,OAAKnC,UAAU,sBAAqBC,SAAA,CACjCuD,GAAazD,cAACa,EAAM,IAEpBoD,GACCjE,cAAA,KAAG,UAAQ,kBAAiBE,SAAC,sCAK9BmD,GACCrD,cAAA,KAAG,UAAQ,qBAAqBC,UAAU,kBAAiBC,SAAC,yBAK7D6D,GACC/D,cAACqC,EAAW,CACVC,OAAQA,EACRZ,WAAYA,WAO1B,ICrEawD,EAAyB,WACpC,OACElF,cAAA,OAAKC,UAAU,YAAWC,SACxBF,cAAA,MAAIC,UAAU,QAAOC,SAAC,oBAG5B,ECCaiF,EAA+B,SAAHnE,GAAA,IAAMM,EAAEN,EAAFM,GAAI8D,EAAIpE,EAAJoE,KAAI,OACrDpF,cAACqB,IAAO,CACNC,GAAIA,EACJrB,UAAW,SAAAoF,GAAA,IAAGC,EAAQD,EAARC,SAAQ,OAAO9D,IAC3B,cACA,CAAE,8BAA+B8D,GAClC,EAACpF,SAEDkF,GACO,ECfCG,EAAmB,WAAH,OAC3BvF,cAAA,OACE,UAAQ,MACRC,UAAU,iCACVuF,KAAK,aACL,aAAW,kBAAiBtF,SAE5BF,cAAA,OAAKC,UAAU,YAAWC,SACxBkC,eAAA,OAAKnC,UAAU,eAAcC,SAAA,CAC3BF,cAACmF,EAAW,CAAC7D,GAAG,IAAI8D,KAAK,SAEzBpF,cAACmF,EAAW,CAAC7D,GAAG,SAAS8D,KAAK,iBAG9B,ECVKK,EAAM,WAAH,OACdrD,eAAA,OAAK,UAAQ,MAAKlC,SAAA,CAChBF,cAACuF,EAAM,IAEPvF,cAAA,QAAMC,UAAU,UAASC,SACvBkC,eAACsD,IAAM,CAAAxF,SAAA,CACLF,cAAC2F,IAAK,CAACC,KAAK,IAAIC,QAAS7F,cAACkF,EAAY,MAEtClF,cAAC2F,IAAK,CAACC,KAAK,IAAIC,QAAS7F,cAACD,EAAQ,MAClCC,cAAC2F,IAAK,CAACC,KAAK,OAAOC,QAAS7F,cAAC8F,IAAQ,CAACxE,GAAG,IAAIyE,SAAO,MAEpD3D,eAACuD,IAAK,CAACC,KAAK,SAAQ1F,SAAA,CAClBF,cAAC2F,IAAK,CAACK,OAAK,EAACH,QAAS7F,cAAC2C,EAAU,MACjC3C,cAAC2F,IAAK,CAACC,KAAK,cAAcC,QAAS7F,cAAC2C,EAAU,gBAIhD,EChBRsD,qBAAWC,SAASC,eAAe,SAChCC,OACCpG,cAACqG,IAAM,CAAAnG,SACLF,cAACyF,EAAG,M","file":"static/js/main.94c3c6b5.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage:React.FC = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Home Page</h1>\n    </div>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { memo } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport classNames from 'classnames';\n\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = memo(({ person }) => {\n  const {\n    slug,\n    name,\n    sex,\n  } = person;\n\n  return (\n    <NavLink\n      to={`/people/${slug}`}\n      className={() => (\n        classNames({ 'has-text-danger': sex === 'f' })\n      )}\n    >\n      {name}\n    </NavLink>\n  );\n});\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  person: Person,\n  personSlug: string,\n  mother: Person | undefined,\n  father: Person | undefined,\n};\n\nexport const PersonItem: React.FC<Props> = ({\n  person,\n  personSlug,\n  mother,\n  father,\n}) => {\n  const {\n    slug,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n  } = person;\n\n  const isSelected = personSlug === slug;\n  const personMotherName = motherName || '-';\n  const personFatherName = fatherName || '-';\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={slug}\n      className={classNames({ 'has-background-warning': isSelected })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>\n        {!mother ? personMotherName : <PersonLink person={mother} />}\n      </td>\n\n      <td>\n        {!father ? personFatherName : <PersonLink person={father} />}\n      </td>\n    </tr>\n  );\n};\n","import React, { memo } from 'react';\nimport { Person } from '../../types';\nimport { PersonItem } from '../PersonItem';\n\ntype Props = {\n  people: Person[],\n  personSlug: string,\n};\n\nexport const PeopleTable: React.FC<Props> = memo(({\n  people,\n  personSlug,\n}) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const mother = people.find(mom => mom.name === person.motherName);\n          const father = people.find(dad => dad.name === person.fatherName);\n\n          return (\n            <PersonItem\n              person={person}\n              key={person.slug}\n              personSlug={personSlug}\n              mother={mother}\n              father={father}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n});\n","import React, {\n  memo,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage: React.FC = memo(() => {\n  const { personSlug = '' } = useParams();\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasError, setHasError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isFetched, setIsFetched] = useState(false);\n\n  const isTableVisible = isFetched && people.length;\n  const isTableEmpty = isFetched && !people.length;\n\n  const fetchPeople = useCallback(async () => {\n    setIsLoading(true);\n\n    try {\n      const responsePeople = await getPeople();\n\n      setPeople(responsePeople);\n      setIsFetched(true);\n    } catch {\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isTableEmpty && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isTableVisible && (\n            <PeopleTable\n              people={people}\n              personSlug={personSlug}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Page not found</h1>\n    </div>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import React from 'react';\nimport { PageNavLink } from '../PageNavLink';\n\nexport const NavBar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n\n        <PageNavLink to=\"people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { NavBar } from './components/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <Routes>\n        <Route path=\"*\" element={<NotFoundPage />} />\n\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":personSlug\" element={<PeoplePage />} />\n        </Route>\n      </Routes>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}